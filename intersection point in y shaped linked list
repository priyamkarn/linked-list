ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
    int lenA = getLength(headA), lenB = getLength(headB);
    while (lenA > lenB) {
        headA = headA->next;
        lenA--;
    }
    while (lenB > lenA) {
        headB = headB->next;
        lenB--;
    }
    while (headA != headB) {
        headA = headA->next;
        headB = headB->next;
    }
    return headA;
}

int getLength(ListNode *head) {
    int len = 0;
    while (head) {
        head = head->next;
        len++;
    }
    return len;
}
One of the most commonly used approaches is to first determine the length of both linked lists and then advance the pointer of the longer linked list
so that both linked lists are the same length.
Then, you can traverse both linked lists in parallel until you find the node at which they intersect.
