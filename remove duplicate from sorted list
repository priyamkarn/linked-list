#include <iostream>
#include <unordered_set>

using namespace std;

// Definition for singly-linked list.
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode* removeDuplicates(ListNode* head) {
    if (!head) {
        return NULL;
    }

    unordered_set<int> seen;
    seen.insert(head->val);
    ListNode* prev = head;
    ListNode* curr = head->next;

    while (curr) {
        if (seen.find(curr->val) != seen.end()) {
            // Duplicate node found
            prev->next = curr->next;
            delete curr;
            curr = prev->next;
        } else {
            // New node found
            seen.insert(curr->val);
            prev = curr;
            curr = curr->next;
        }
    }

    return head;
}

int main() {
    ListNode* head = new ListNode(1);
    head->next = new ListNode(2);
    head->next->next = new ListNode(1);
    head->next->next->next = new ListNode(3);
    head->next->next->next->next = new ListNode(2);

    ListNode* newHead = removeDuplicates(head);

    // Print the linked list
    ListNode* curr = newHead;
    while (curr) {
        cout << curr->val << " ";
        curr = curr->next;
    }
    cout << endl;

    return 0;
}
